<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on log</title>
    <link>http://shogo-ma.github.io/tags/python/</link>
    <description>Recent content in Python on log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 27 Jul 2015 01:19:31 +0900</lastBuildDate>
    <atom:link href="http://shogo-ma.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>pyenvを使っての環境構築</title>
      <link>http://shogo-ma.github.io/post/pyenv-manual/</link>
      <pubDate>Mon, 27 Jul 2015 01:19:31 +0900</pubDate>
      
      <guid>http://shogo-ma.github.io/post/pyenv-manual/</guid>
      <description>

&lt;p&gt;探せばpyenvの使い方的なものは色々溢れてるけど、色々分散していたので個人的なまとめを作る。流れとしては以下の様な感じ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;手順

&lt;ol&gt;
&lt;li&gt;pyenvとpluginをinstall&lt;/li&gt;
&lt;li&gt;pyenvを使ってpythonをinstall&lt;/li&gt;
&lt;li&gt;virtualenvを使って環境を構築&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;pyenvとpluginをinstall:36b4326871019bb570f43b2854147428&#34;&gt;pyenvとpluginをinstall&lt;/h2&gt;

&lt;p&gt;今回、想定している状況が「apt-getを使う権限がないユーザが異なるpythonをinstallしたい」という感じ。なのでgithubからcloneしてくる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://github.com/yyuu/pyenv.git ~/.pyenv
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次に今回使うpluginをinstall。使いたいのはpyenv-pip-refleshとpyenv-virtualenvの２つ。&lt;/p&gt;

&lt;p&gt;pyenv-pip-refleshはpyenvでpythonのversionを切り替えた時に、pyenv rehashというコマンドを使う必要があるのだけど、それをしないで済むplugin。pyenv-virtualenvはpythonの仮想環境を作るpluginになっている。&lt;/p&gt;

&lt;p&gt;それぞれ~/.pyenv/pluginsの中にcloneすればinstallが終わり&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~/.pyenv/plugins
git clone https://github.com/yyuu/pyenv-pip-rehash.git
git clone git://github.com/yyuu/pyenv-virtualenv.git 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次は~/.bashrcにpyenvのpathを書く。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;export PYENV_ROOT=&amp;quot;$HOME/.pyenv&amp;quot;
if [ -d &amp;quot;$PYENV_ROOT&amp;quot; ]; then
    export PATH=&amp;quot;$PYENV_ROOT/bin:$PATH&amp;quot;
    eval &amp;quot;$(pyenv init -)&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだけでいいなんて、すばらしい。&lt;/p&gt;

&lt;h2 id=&#34;pyenvを使ってpythonをinstall:36b4326871019bb570f43b2854147428&#34;&gt;pyenvを使ってpythonをinstall&lt;/h2&gt;

&lt;p&gt;pyenvで自分の欲しいpythonのversionをinstallする。pyenvでinstallできるversionは以下で確認可能。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pyenv install -l
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回欲しいversionは2.7系なので、それの中からてきとうなやつをinstallする。下のコマンドを入力して少しすると2.7.10がinstallできる。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pyenv install 2.7.10
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;virtualenvを使って環境を構築:36b4326871019bb570f43b2854147428&#34;&gt;virtualenvを使って環境を構築&lt;/h2&gt;

&lt;p&gt;使う環境を分けたいので、virtualenvを使って、別で新しく環境を作る。以下のコマンドで仮想環境を作成できる。virtualenv-nameには自分で適当な名前を入れるといい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pyenv virtualenv 2.7.10 virtualenv-name
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成した環境を使う場合には以下のコマンド。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pyenv activate virtualenv-name // 環境を使う時
pyenv deactivate // 環境から抜けたいとき
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;activateすると以下のように言われるので、言われるままに追加すればいい。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Load pyenv-virtualenv automatically by adding
# the following to ~/.bash_profile:

eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;自分の場合だと、~/.bashrcに追加したので以下のような感じ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;echo &#39;eval &amp;quot;$(pyenv virtualenv-init -)&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;作成した環境ごとにpipを使えるので、あとは欲しいライブラリなどを適当にinstallすれば終わり。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>